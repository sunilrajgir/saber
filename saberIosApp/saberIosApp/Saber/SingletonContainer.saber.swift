// Generated by Saber 0.2.1

// swiftlint:disable all

import Foundation

internal class SingletonContainer: SingletonContaining {

    private var cached_nManager: NManager?

    internal init() {
    }

    internal var nManager: NManager {
        if let cached = self.cached_nManager { return cached }
        let nManager = self.makeNManager()
        self.cached_nManager = nManager
        return nManager
    }

    internal var pManager: PManager {
        let pManager = self.makePManager()
        return pManager
    }

    internal var uManger: UManger {
        let uManger = self.makeUManger()
        return uManger
    }

    private func makeNManager() -> NManager {
        return NManager()
    }

    private func makePManager() -> PManager {
        return PManager(nManager: self.nManager)
    }

    private func makeUManger() -> UManger {
        return UManger(nManager: self.nManager)
    }

}